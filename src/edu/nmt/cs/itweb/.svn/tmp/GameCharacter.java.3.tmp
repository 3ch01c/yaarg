
package edu.nmt.cs.itweb;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.*;

public class GameCharacter {

	private Integer id, level, exp, required_xp,
	  gold, hp, energy,
	  strength, magic, dexterity, luck,
	  current_hp, hp_regen, current_energy, energy_regen,
	  armor, armor_pen, magic_res, magic_pen,
	  base_phys_damage, base_magic_damage,
	  attack_speed, hit_chance, crit_chance, evasion,
	  head, body, shoulders, legs, hands, feet, accessory, mainhand, offhand;

<<<<<<< .mine
	private String name, icon_url, type, owner, location,
  			  char_class, status;


    public GameCharacter() {
=======
    public GameCharacter(){
>>>>>>> .r142

    }
<<<<<<< .mine

    public int RandomAttack(int numOfSkills)
    {
        //TODO variables will be changed depending on Battle Servlet
        Random generator = new Random(new Date().getTime());

        // Generates a number based on number of skills and the resulting number corresponds
        // to the attack to be done.
        int num = generator.nextInt(numOfSkills);
        return num;
    }

    public static GameCharacter NPC(int level)
    {
        Random generator = new Random(new Date().getTime());
        Integer hp = generator.nextInt(5)*level+10;
        Integer energy = generator.nextInt(5)*level+10;
        //TODO add class and type parameter
        //All stats are randomized within +-10 of the level
        GameCharacter npc = new GameCharacter();

        npc.setId(-1);
        npc.setType("NPC");
        npc.setOwner("-1");
        npc.setChar_class("");
        npc.setLevel(level);
        npc.setExp(level+generator.nextInt(10));
        npc.setStatus("Normal");
        npc.setHp(hp);
        npc.setEnergy(energy);
        npc.setStrength(level/2+generator.nextInt(10));
        npc.setMagic(level/2+generator.nextInt(10));
        npc.setDexterity(level/2+generator.nextInt(10));
        npc.setLuck(level/2+generator.nextInt(10));
        npc.setHp_regen(0);
        npc.setCurrent_hp(hp);
        npc.setEnergy_regen(0);
        npc.setCurrent_energy(energy);
        npc.setArmor(level/2+generator.nextInt(10));
        npc.setArmor_pen(level/2+generator.nextInt(10));
        npc.setMagic_res(level/2+generator.nextInt(10));
        npc.setMagic_pen(level/2+generator.nextInt(10));
        npc.setBase_phys_damage(level/2+generator.nextInt(10));
        npc.setBase_magic_damage(level/2+generator.nextInt(10));
        npc.setAttack_speed(level/2+generator.nextInt(10));
        npc.setHit_chance(level/2+generator.nextInt(10));
        npc.setCrit_chance(level/2+generator.nextInt(10));
        npc.setEvasion(level/2+generator.nextInt(10));
        npc.setRequired_xp(0);
        npc.setHead(null);
        npc.setBody(null);
        npc.setShoulders(null);
        npc.setLegs(null);
        npc.setHands(null);
        npc.setFeet(null);
        npc.setAccessory(null);
        npc.setMainhand(null);
        npc.setOffhand(null);
        npc.setName("Tragdor");
        npc.setIcon_url(null);
        npc.setLocation("801 Leroy Pl., Socorro, NM, 87801, United States");

        return npc;
    }
=======

    public int RandomAttack(int numOfSkills)
    {
        //TODO variables will be changed depending on Battle Servlet
        Random generator = new Random(new Date().getTime());

        // Generates a number based on number of skills and the resulting number corresponds
        // to the attack to be done.
        int num = generator.nextInt(numOfSkills);
        return num;
    }

    public static GameCharacter NPC(int level)
    {
        Random generator = new Random(new Date().getTime());
        String hp = Integer.toString(generator.nextInt(5)*level+10);
        String energy = Integer.toString(generator.nextInt(5)*level+10);
        //TODO add class and type parameter
        //All stats are randomized within +-10 of the level
        GameCharacter npc = new GameCharacter();

        npc.setId("-1");
        npc.setType("NPC");
        npc.setOwner("-1");
        npc.setChar_class("");
        npc.setLevel(Integer.toString(level));
        npc.setExp(Integer.toString(level+generator.nextInt(10)));
        npc.setStatus("Normal");
        npc.setHp(hp);
        npc.setEnergy(energy);
        npc.setStrength(Integer.toString(level/2+generator.nextInt(10)));
        npc.setMagic(Integer.toString(level/2+generator.nextInt(10)));
        npc.setDexterity(Integer.toString(level/2+generator.nextInt(10)));
        npc.setLuck(Integer.toString(level/2+generator.nextInt(10)));
        npc.setHp_regen("0");
        npc.setCurrent_hp(hp);
        npc.setEnergy_regen("0");
        npc.setCurrent_energy(energy);
        npc.setArmor(Integer.toString(level/2+generator.nextInt(10)));
        npc.setArmor_pen(Integer.toString(level/2+generator.nextInt(10)));
        npc.setMagic_res(Integer.toString(level/2+generator.nextInt(10)));
        npc.setMagic_pen(Integer.toString(level/2+generator.nextInt(10)));
        npc.setBase_phys_damage(Integer.toString(level/2+generator.nextInt(10)));
        npc.setBase_magic_damage(Integer.toString(level/2+generator.nextInt(10)));
        npc.setAttack_speed(Integer.toString(level/2+generator.nextInt(10)));
        npc.setHit_chance(Integer.toString(level/2+generator.nextInt(10)));
        npc.setCrit_chance(Integer.toString(level/2+generator.nextInt(10)));
        npc.setEvasion(Integer.toString(level/2+generator.nextInt(10)));
        npc.setRequired_xp("0");
        npc.setHead(null);
        npc.setBody(null);
        npc.setShoulders(null);
        npc.setLegs(null);
        npc.setHands(null);
        npc.setFeet(null);
        npc.setAccessory(null);
        npc.setMainhand(null);
        npc.setOffhand(null);
        npc.setName("Tragdor");
        npc.setIcon_url(null);
        npc.setLocation("801 Leroy Pl., Socorro, NM, 87801, United States");

        return npc;
    }
>>>>>>> .r142
    
    public static GameCharacter getCharacter(Integer id) throws SQLException {
		//System.out.println("Fetching character id "+id+"...");
    	GameCharacter character = new GameCharacter();
    	Connection con = DBConnection.getConnection();
		Statement stmt = con.createStatement();
		ResultSet rs = stmt.executeQuery("SELECT * FROM `character` WHERE (id='"+id+"');");
		if(rs.next()) {
			character.setId(rs.getInt("id"));
			character.setType(rs.getString("type"));
			character.setOwner(rs.getString("owner"));
			character.setChar_class(rs.getString("class"));
			character.setLevel(rs.getInt("level"));
			character.setExp(rs.getInt("exp"));
			character.setStatus(rs.getString("status"));
<<<<<<< .mine
			character.setHp(rs.getInt("hp"));
			character.setStrength(rs.getInt("strength"));
			character.setMagic(rs.getInt("magic"));
			character.setDexterity(rs.getInt("dexterity"));
			character.setLuck(rs.getInt("luck"));
			character.setHp_regen(rs.getInt("hp_regen"));
			character.setCurrent_hp(rs.getInt("current_hp"));
			character.setEnergy_regen(rs.getInt("energy_regen"));
			character.setCurrent_energy(rs.getInt("current_energy"));
			character.setArmor(rs.getInt("armor"));
			character.setArmor_pen(rs.getInt("armor_pen"));
			character.setMagic_res(rs.getInt("magic_res"));
			character.setMagic_pen(rs.getInt("magic_pen"));
			character.setBase_phys_damage(rs.getInt("base_phys_damage"));
			character.setBase_magic_damage(rs.getInt("base_magic_damage"));
			character.setAttack_speed(rs.getInt("attack_speed"));
			character.setHit_chance(rs.getInt("hit_chance"));
			character.setCrit_chance(rs.getInt("crit_chance"));
			character.setEvasion(rs.getInt("evasion"));
			character.setRequired_xp(rs.getInt("required_xp"));
			character.setHead(rs.getInt("head"));
			character.setBody(rs.getInt("body"));
			character.setShoulders(rs.getInt("shoulders"));
			character.setLegs(rs.getInt("legs"));
			character.setHands(rs.getInt("hands"));
			character.setFeet(rs.getInt("feet"));
			character.setAccessory(rs.getInt("accessory"));
			character.setMainhand(rs.getInt("mainhand"));
			character.setOffhand(rs.getInt("offhand"));
=======
			character.setHp(rs.getString("hp"));
                        character.setEnergy(rs.getString("energy"));
			character.setStrength(rs.getString("strength"));
			character.setMagic(rs.getString("magic"));
			character.setDexterity(rs.getString("dexterity"));
			character.setLuck(rs.getString("luck"));
			character.setHp_regen(rs.getString("hp_regen"));
			character.setCurrent_hp(rs.getString("current_hp"));
			character.setEnergy_regen(rs.getString("energy_regen"));
			character.setCurrent_energy(rs.getString("current_energy"));
			character.setArmor(rs.getString("armor"));
			character.setArmor_pen(rs.getString("armor_pen"));
			character.setMagic_res(rs.getString("magic_res"));
			character.setMagic_pen(rs.getString("magic_pen"));
			character.setBase_phys_damage(rs.getString("base_phys_damage"));
			character.setBase_magic_damage(rs.getString("base_magic_damage"));
			character.setAttack_speed(rs.getString("attack_speed"));
			character.setHit_chance(rs.getString("hit_chance"));
			character.setCrit_chance(rs.getString("crit_chance"));
			character.setEvasion(rs.getString("evasion"));
			character.setRequired_xp(rs.getString("required_xp"));
			character.setHead(rs.getString("head"));
			character.setBody(rs.getString("body"));
			character.setShoulders(rs.getString("shoulders"));
			character.setLegs(rs.getString("legs"));
			character.setHands(rs.getString("hands"));
			character.setFeet(rs.getString("feet"));
			character.setAccessory(rs.getString("accessory"));
			character.setMainhand(rs.getString("mainhand"));
			character.setOffhand(rs.getString("offhand"));
>>>>>>> .r142
			character.setName(rs.getString("name"));
			character.setIcon_url(rs.getString("icon_url"));
			character.setLocation(rs.getString("location"));    
		}
		//System.out.println("Found "+character.getName()+"!");
    	return character;
    }
    
    public static ArrayList<GameCharacter> listCharacters(String email) throws SQLException {
    	//System.out.println("Fetching list of characters for "+email+"...");
    	ArrayList<GameCharacter> characterList = new ArrayList<GameCharacter>();
    	Connection con = DBConnection.getConnection();
		Statement stmt = con.createStatement();
    	//System.out.println("Executing query...");
		ResultSet rs = stmt.executeQuery("SELECT id FROM `character` WHERE (owner='"+email+"');");
		while(rs.next()) {
			//System.out.println("Fetching character #"+rs.getString("id"));
	    	GameCharacter character = GameCharacter.getCharacter(rs.getInt("id"));
			characterList.add(character);
		}
		con.close();
    	//System.out.println("Found "+characterList.size()+" characters!");
    	return characterList;
    }

	/**
	 * @return the id
	 */
	public Integer getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * @return the level
	 */
	public Integer getLevel() {
		return level;
	}

	/**
	 * @param level the level to set
	 */
	public void setLevel(Integer level) {
		this.level = level;
	}

	/**
	 * @return the exp
	 */
	public Integer getExp() {
		return exp;
	}

	/**
	 * @param exp the exp to set
	 */
	public void setExp(Integer exp) {
		this.exp = exp;
	}

	/**
	 * @return the required_xp
	 */
	public Integer getRequired_xp() {
		return required_xp;
	}

	/**
	 * @param requiredXp the required_xp to set
	 */
	public void setRequired_xp(Integer requiredXp) {
		required_xp = requiredXp;
	}

	/**
	 * @return the gold
	 */
	public Integer getGold() {
		return gold;
	}

	/**
	 * @param gold the gold to set
	 */
	public void setGold(Integer gold) {
		this.gold = gold;
	}

	/**
	 * @return the hp
	 */
	public Integer getHp() {
		return hp;
	}

	/**
	 * @param hp the hp to set
	 */
	public void setHp(Integer hp) {
		this.hp = hp;
	}

	/**
	 * @return the energy
	 */
	public Integer getEnergy() {
		return energy;
	}

	/**
	 * @param energy the energy to set
	 */
	public void setEnergy(Integer energy) {
		this.energy = energy;
	}

	/**
	 * @return the strength
	 */
	public Integer getStrength() {
		return strength;
	}

	/**
	 * @param strength the strength to set
	 */
	public void setStrength(Integer strength) {
		this.strength = strength;
	}

	/**
	 * @return the magic
	 */
	public Integer getMagic() {
		return magic;
	}

	/**
	 * @param magic the magic to set
	 */
	public void setMagic(Integer magic) {
		this.magic = magic;
	}

	/**
	 * @return the dexterity
	 */
	public Integer getDexterity() {
		return dexterity;
	}

	/**
	 * @param dexterity the dexterity to set
	 */
	public void setDexterity(Integer dexterity) {
		this.dexterity = dexterity;
	}

	/**
	 * @return the luck
	 */
	public Integer getLuck() {
		return luck;
	}

	/**
	 * @param luck the luck to set
	 */
	public void setLuck(Integer luck) {
		this.luck = luck;
	}

	/**
	 * @return the current_hp
	 */
	public Integer getCurrent_hp() {
		return current_hp;
	}

	/**
	 * @param currentHp the current_hp to set
	 */
	public void setCurrent_hp(Integer currentHp) {
		current_hp = currentHp;
	}

	/**
	 * @return the hp_regen
	 */
	public Integer getHp_regen() {
		return hp_regen;
	}

	/**
	 * @param hpRegen the hp_regen to set
	 */
	public void setHp_regen(Integer hpRegen) {
		hp_regen = hpRegen;
	}

	/**
	 * @return the current_energy
	 */
	public Integer getCurrent_energy() {
		return current_energy;
	}

	/**
	 * @param currentEnergy the current_energy to set
	 */
	public void setCurrent_energy(Integer currentEnergy) {
		current_energy = currentEnergy;
	}

	/**
	 * @return the energy_regen
	 */
	public Integer getEnergy_regen() {
		return energy_regen;
	}

	/**
	 * @param energyRegen the energy_regen to set
	 */
	public void setEnergy_regen(Integer energyRegen) {
		energy_regen = energyRegen;
	}

	/**
	 * @return the armor
	 */
	public Integer getArmor() {
		return armor;
	}

	/**
	 * @param armor the armor to set
	 */
	public void setArmor(Integer armor) {
		this.armor = armor;
	}

	/**
	 * @return the armor_pen
	 */
	public Integer getArmor_pen() {
		return armor_pen;
	}

	/**
	 * @param armorPen the armor_pen to set
	 */
	public void setArmor_pen(Integer armorPen) {
		armor_pen = armorPen;
	}

	/**
	 * @return the magic_res
	 */
	public Integer getMagic_res() {
		return magic_res;
	}

	/**
	 * @param magicRes the magic_res to set
	 */
	public void setMagic_res(Integer magicRes) {
		magic_res = magicRes;
	}

	/**
	 * @return the magic_pen
	 */
	public Integer getMagic_pen() {
		return magic_pen;
	}

	/**
	 * @param magicPen the magic_pen to set
	 */
	public void setMagic_pen(Integer magicPen) {
		magic_pen = magicPen;
	}

	/**
	 * @return the base_phys_damage
	 */
	public Integer getBase_phys_damage() {
		return base_phys_damage;
	}

	/**
	 * @param basePhysDamage the base_phys_damage to set
	 */
	public void setBase_phys_damage(Integer basePhysDamage) {
		base_phys_damage = basePhysDamage;
	}

	/**
	 * @return the base_magic_damage
	 */
	public Integer getBase_magic_damage() {
		return base_magic_damage;
	}

	/**
	 * @param baseMagicDamage the base_magic_damage to set
	 */
	public void setBase_magic_damage(Integer baseMagicDamage) {
		base_magic_damage = baseMagicDamage;
	}

	/**
	 * @return the attack_speed
	 */
	public Integer getAttack_speed() {
		return attack_speed;
	}

	/**
	 * @param attackSpeed the attack_speed to set
	 */
	public void setAttack_speed(Integer attackSpeed) {
		attack_speed = attackSpeed;
	}

	/**
	 * @return the hit_chance
	 */
	public Integer getHit_chance() {
		return hit_chance;
	}

	/**
	 * @param hitChance the hit_chance to set
	 */
	public void setHit_chance(Integer hitChance) {
		hit_chance = hitChance;
	}

	/**
	 * @return the crit_chance
	 */
	public Integer getCrit_chance() {
		return crit_chance;
	}

	/**
	 * @param critChance the crit_chance to set
	 */
	public void setCrit_chance(Integer critChance) {
		crit_chance = critChance;
	}

	/**
	 * @return the evasion
	 */
	public Integer getEvasion() {
		return evasion;
	}

	/**
	 * @param evasion the evasion to set
	 */
	public void setEvasion(Integer evasion) {
		this.evasion = evasion;
	}

	/**
	 * @return the head
	 */
	public Integer getHead() {
		return head;
	}

	/**
	 * @param head the head to set
	 */
	public void setHead(Integer head) {
		this.head = head;
	}

	/**
	 * @return the body
	 */
	public Integer getBody() {
		return body;
	}

	/**
	 * @param body the body to set
	 */
	public void setBody(Integer body) {
		this.body = body;
	}

	/**
	 * @return the shoulders
	 */
	public Integer getShoulders() {
		return shoulders;
	}

	/**
	 * @param shoulders the shoulders to set
	 */
	public void setShoulders(Integer shoulders) {
		this.shoulders = shoulders;
	}

	/**
	 * @return the legs
	 */
	public Integer getLegs() {
		return legs;
	}

	/**
	 * @param legs the legs to set
	 */
	public void setLegs(Integer legs) {
		this.legs = legs;
	}

	/**
	 * @return the hands
	 */
	public Integer getHands() {
		return hands;
	}

	/**
	 * @param hands the hands to set
	 */
	public void setHands(Integer hands) {
		this.hands = hands;
	}

	/**
	 * @return the feet
	 */
	public Integer getFeet() {
		return feet;
	}

	/**
	 * @param feet the feet to set
	 */
	public void setFeet(Integer feet) {
		this.feet = feet;
	}

	/**
	 * @return the accessory
	 */
	public Integer getAccessory() {
		return accessory;
	}

	/**
	 * @param accessory the accessory to set
	 */
	public void setAccessory(Integer accessory) {
		this.accessory = accessory;
	}

	/**
	 * @return the mainhand
	 */
	public Integer getMainhand() {
		return mainhand;
	}

	/**
	 * @param mainhand the mainhand to set
	 */
	public void setMainhand(Integer mainhand) {
		this.mainhand = mainhand;
	}

	/**
	 * @return the offhand
	 */
	public Integer getOffhand() {
		return offhand;
	}

	/**
	 * @param offhand the offhand to set
	 */
	public void setOffhand(Integer offhand) {
		this.offhand = offhand;
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return the icon_url
	 */
	public String getIcon_url() {
		return icon_url;
	}

	/**
	 * @param iconUrl the icon_url to set
	 */
	public void setIcon_url(String iconUrl) {
		icon_url = iconUrl;
	}

	/**
	 * @return the type
	 */
	public String getType() {
		return type;
	}

	/**
	 * @param type the type to set
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * @return the owner
	 */
	public String getOwner() {
		return owner;
	}

	/**
	 * @param owner the owner to set
	 */
	public void setOwner(String owner) {
		this.owner = owner;
	}

	/**
	 * @return the location
	 */
	public String getLocation() {
		return location;
	}

	/**
	 * @param location the location to set
	 */
	public void setLocation(String location) {
		this.location = location;
	}

	/**
	 * @return the char_class
	 */
	public String getChar_class() {
		return char_class;
	}

	/**
	 * @param charClass the char_class to set
	 */
	public void setChar_class(String charClass) {
		char_class = charClass;
	}

	/**
	 * @return the status
	 */
	public String getStatus() {
		return status;
	}

	/**
	 * @param status the status to set
	 */
	public void setStatus(String status) {
		this.status = status;
	}
}
